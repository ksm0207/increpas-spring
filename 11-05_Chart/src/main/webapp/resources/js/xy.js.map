{"version":3,"sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js"],"names":["setupDefaultRules","ic","this","_root","interfaceColors","language","r","rule","bind","setAll","colors","ColorSet","paddingLeft","paddingRight","paddingTop","paddingBottom","panX","panY","wheelStep","arrangeTooltips","saturation","fillOpacity","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","states","create","strokeOpacity","inside","minGridDistance","opacity","centerY","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","behavior","layer","exportable","strokeDasharray","start","end","minZoomCount","maxZoomCount","Infinity","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","textAlign","opposite","inversed","cellStartLocation","cellEndLocation","width","height","isMeasured","position","startLocation","endLocation","fillRule","dataItem","index","axisFill","get","setPrivate","gridIntervals","timeUnit","count","dateFormats","translate","periodChangeDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","axis","component","value","step","getPrivate","min","intervalDuration","Math","round","baseValue","logarithmic","extraMin","extraMax","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","parent","h","w","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","Theme","List","chartContainer","children","push","Container","layout","verticalLayout","horizontalLayout","yAxesAndPlotContainer","maskContent","plotContainer","Button","themeTags","icon","Graphics","x","y","_defaultThemes","XYChartDefaultTheme","new","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","moveValue","Rectangle","fill","Color","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","series","xAxis","yAxis","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","plotPoint","_display","toLocal","documentPointToRoot","clientX","clientY","shiftY","deltaY","shiftX","deltaX","each","fixPosition","newStart","newEnd","zoom","dispose","local","_downPoint","_panStart","_panEnd","_event","undefined","_isPanning","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","cursor","snapToSeries","isHidden","isHiding","startIndex","endIndex","dataItems","length","i","point","distance","hypot","tooltip","_setDataItem","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","topAxesContainer","e","_handleScrollbar","getIndex","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","type","oldValues","_removeAxis","newValue","processChart","setIndex","insertIndex","Error","oldValue","isDisposed","axisParent","removeValue","gridContainer","gridParent","topGridParent","left","right","_axis","indexOf","setRaw","updateGrips","show","hide","closest","closestPoint","plotT","plotB","tooltips","sum","minDistance","movePoint","_movePoint","maxTooltipDistance","hidden","inPlot","_tooltipToLocal","tooltipContainer","sort","a","b","reverse","Percent","top","bottom","_fy","max","SerialChart","XYChart","className","_settings","_drawLines","setTimeout","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_updateChildren","_getPoint","lineX","animate","key","to","duration","easing","lineY","chart","_handleMove","_handleCursorDown","_handleCursorUp","_downPoints","native","selection","rootPoint","_inPlot","isEnabled","dispatch","target","_getPosition","charAt","userPositionX","userPositionY","abs","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","AxisLabel","AxisLabelRadial","ticks","template","grid","axisFills","labels","tick","labelsContainer","make","label","axisName","axisLength","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","AxisRenderer","AxisTick","_beforeChanged","isPrivateDirty","Grid","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","_ph","_pw","baseAxis","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","inited","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","len","_toggleColumn","_updateGraphics","_skipped","previousDataItem","graphics","_makeGraphics","legendDataItem","markerRectangle","stroke","axisRanges","axisRange","graphicsArray","rangeGraphics","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","getDataItemPositionX","getDataItemPositionY","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","_handleDataSetChange","_dataItems","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","disposeDataItem","list","promises","hideDataItem","Promise","all","bullets","bullet","showDataItem","column","setting","_getTooltipTarget","strokes","fills","_fillGenerator","y0","p","x0","y1","x1","mainContainer","_strokeTemplate","_fillTemplate","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataContext","_valueFields","field","_endIndex","clear","_startSegment","segmentIndex","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","nextItem","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","_points","_firstPoint","segment","context","_processAxisRange","_dataItem","marker","legendStroke","legendFill","disabledColor","bulletFunction","LineSeries","fields","valueFields","_setRawDefault","_removeAxisRange","axisDataItem","_seriesAxisRanges","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xLowField","_xHighField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","_handleMaskBullets","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","_min","_max","getStackedYValue","processSeriesDataItem","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","_dataGrouped","_groupSeriesData","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","processYSelectionDataItem","processXSelectionDataItem","markDirtySelectionExtremes","_mainContainerMask","mask","_markDirtyKey","_makeRangeMask","drawRect","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","updateLegendMarker","_afterDataChange","_aggregatesCalculated","_clearDirty","_shouldShowBullet","_positionX","_positionY","id","_dataSets","_markDataSetDirty","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","_afterChanged","_markDirtyAxes","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","positionToCoordinate","_position","resetExtremes","XYSeries","that","_context","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","closePath","custom","cardinal","interactive","interactiveChildren","_addOrientationClass","orientation","thumb","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","background","axisHeader","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","priority","minZoomFactor","playing","_series","_createAssets","_rangesDirty","_prepareDataItem","above","_index","_updateCursor","delta","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","_handleAxisSelection","onPrivate","markDirtySize","_toggleDataItem","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","Component","Axis","_itemMap","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","j","f","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateGrid","updateTick","updateFill","updateBullet","cellLocation","_axisLocation","category","axisPositionToIndex","fieldName","seriesDataItem","zoomToIndexes","classNames","concat","startTime","endTime","realDuration","baseDuration","gridInterval","nextGridUnit","baseInterval","format","formats","previousValue","previousIndex","previousUnitValue","selectedItems","changed","skip","date","Date","unitValue","added","utc","pop","shouldAdd","item","dateFormatter","CategoryDateAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","numberFormat","formatter","getNumberFormatter","selectionMin","selectionMax","processDataItem","_formatText","log","LOG10E","pow","stepPower","decCount","endValue","valueToPosition","hasTag","removeTag","positionToValue","gridCount","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","axisLocation","fixSmallStep","total","minDefined","maxDefined","seriesMin","seriesMax","isShowing","_minReal","_maxReal","_deltaMinMax","minMaxStep2","_syncAxes","valueToFinalPosition","minDiff","diff","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strict","animatePrivate","strictMode","initialMin","initialMax","difference","extra","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","baseMainDuration","groupInterval","setDataSet","interval","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","time","roundedTime","locale","firstDayOfWeek","getTime","_makeDataItem","groupKey","currentValue","average","_groupingCalculated","modifiedDifference","current","_strictMode","_intervalDuration","intervals","close","openValue","closeValue","result","first","second","value1","zoomToValues","DateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","gridTemplate","_changed","axisChildren","_ls","_lc","innerWidth","toggleVisibility","fillDrawMethod","_positionTooltip","num","global","pointerOrientation","oldBounds","AxisRendererX","innerHeight","AxisRendererY","_draw","RoundedRectangle","Candlestick","Template","ColumnSeries","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","getRaw","_updateCandleGraphics","CandlestickSeries","lY","hX","OHLC","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_t","stepAfter","_x","_y","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","point1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy"],"mappings":"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","file":"xy.js","sourcesContent":["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 20,\r\n\t\t\texportable: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\ttextAlign: \"right\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\ttextAlign: \"left\"\r\n\t\t});\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\"),\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\t\t\t\t\tconst min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif (Math.round((value - min) / intervalDuration) / 2 == Math.round(Math.round((value - min) / intervalDuration) / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\textraMin: 0,\r\n\t\t\textraMax: 0,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.plotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\tplotContainer.children.moveValue(zoomOutButton);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tplotContainer.set(\"wheelable\", true);\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\tconst plotPoint = plotContainer._display.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tplotContainer.set(\"wheelable\", false);\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\n\t\t// TODO: handle multitouch\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer._display.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer._display.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\t//axis.set(\"start\", Math.max(-maxDeviation, start));\n\t\t\t\t\t\t//axis.set(\"end\", Math.min(1 + maxDeviation, end));\n\n\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\t//axis.set(\"start\", Math.max(-maxDeviation, start));\n\t\t\t\t\t\t//axis.set(\"end\", Math.min(1 + maxDeviation, end));\n\n\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tconst startIndex = series.getPrivate(\"startIndex\", 0);\n\t\t\t\t\t\tconst endIndex = series.getPrivate(\"endIndex\", series.dataItems.length - 1);\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number) {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX && !scrollbarX.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY && !scrollbarY.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.reverse();\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer._display.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 20\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\tthis.handleMove();\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tthis.lineX.animate({ key: \"x\", to: this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tthis.lineY.animate({ key: \"y\", to: this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native) {\n\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t// we're not dragging.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>): AxisTick {\n\t\tconst tick = this.axis.labelsContainer.children.push(this.ticks.make());\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>): Grid {\n\t\tconst grid = this.axis.gridContainer.children.push(this.grid.make());\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>): Grid {\n\t\tconst axisFill = this.axis.gridContainer.children.push(this.axisFills.make());\n\t\taxisFill._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlet themeTags = [];\n\t\tif (this.get(\"opposite\" as any)) {\n\t\t\tthemeTags.push(\"opposite\");\n\t\t}\n\t\tif (this.get(\"inside\" as any)) {\n\t\t\tthemeTags.push(\"inside\");\n\t\t}\n\n\t\tconst axisName = this.axis.getPrivate(\"name\");\n\n\t\tif(axisName){\n\t\t\tthemeTags.push(axisName);\n\t\t}\t\t\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC(){\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?:boolean;\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.getPrivate(\"startIndex\", 0) - 2);\n\t\t\t\tlet endIndex = Math.min(this.getPrivate(\"endIndex\", len) + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tprevious = dataItem;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif(this.get(\"adjustBulletPosition\")){\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.strokes.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.fills.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.getPrivate(\"endIndex\", len);\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis.strokes.clear();\n\t\t\t\tthis.fills.clear();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tlet fill = this.makeFill(fills);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tlet stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(this._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(this._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(this._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif(bullet){\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate } from \"../../../core/render/Series\";\nimport type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t * \n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tprotected _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {})\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem);\n\n\t\t\taxisDataItem.get(\"label\")!.set(\"visible\", false);\n\t\t\taxisDataItem.get(\"tick\")!.set(\"visible\", false);\n\t\t\taxisDataItem.get(\"grid\")!.set(\"visible\", false);\n\t\t\taxisDataItem.get(\"axisFill\")!.set(\"visible\", false);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tthis.children.push(axisFill);\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t\taxisFill._setSoft(\"fillOpacity\", 0);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem)\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t\taxisRange.axisDataItem.dispose();\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif ((this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty)) {\n\n\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\t\t\tlet endIndex = this.getPrivate(\"endIndex\", this.dataItems.length);\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tif (!this._mainContainerMask) {\n\t\t\t\tconst mainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\n\t\t\t\tmainContainerMask!.set(\"draw\", (display) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(mainContainerMask._display, mainContainerMask);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._mainContainerMask.markDirty();\n\t\t\tthis._mainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _maskBaseDraw() {\n\t\tconst mainContainerMask = this._mainContainerMask!;\n\t\tmainContainerMask.set(\"draw\", (display) => {\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tconst w = parent.width();\n\t\t\t\tconst h = parent.height();\n\t\t\t\tdisplay.drawRect(0, 0, w, h);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tlet value = dataItem.get(field);\n\t\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tvalue._markDirtyStack();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._xField, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._yField, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.setPrivate(\"startIndex\", 0);\n\t\tthis.setPrivate(\"endIndex\", this.dataItems.length);\n\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning:boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis.axisRanges.each((dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tchange.oldValue.dispose();\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}));\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tlet priority: \"start\" | \"end\" = \"end\";\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactor / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactor / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tlet sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\tlet eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t}\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(this.ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\n\t/**\n\t * @todo needs description\n\t * Can be called when axis zoom changes and you need to update tooltip position\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\t\t\tif (!snapToSeries) {\n\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\tseries.showDataItemTooltip(this.getSeriesItem(series, position!));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\n\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(date, new Date(previousValue), nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n//import * as $order from \"../../../core/util/Order\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n\tminFinal?: number;\n\tmaxFinal?: number;\n\tselectionMin?: number;\n\tselectionMax?: number;\n\tselectionMinFinal?: number;\n\tselectionMaxFinal?: number;\n\tselectionStepFinal?: number;\n\tstep?: number;\n\tstepDecimalPlaces?: number;\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = selectionMin;\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet differencePower = Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E;\n\t\t\t\t\tif (differencePower > 1) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(min) * Math.LOG10E + i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.getPrivate(\"startIndex\", 0);\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.getPrivate(\"endIndex\", series.dataItems.length);\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (value != undefined) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (value != undefined) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tconst extraMin = this.get(\"extraMin\", 0);\n\t\tconst extraMax = this.get(\"extraMax\", 0);\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\n\t\tconst strictMinMax = this.get(\"strictMinMax\", false);\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t}\n\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet seriesMin: number | undefined;\n\t\t\tlet seriesMax: number | undefined;\n\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t}\n\n\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\tif (diff <= 0) {\n\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t}\n\n\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\tminDiff = diff;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity && max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strict = this.get(\"strictMinMax\");\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (this.get(\"strictMinMax\")) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\tif (!logarithmic) {\n\t\t\t// round down min\n\t\t\tif (strictMode) {\n\t\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.ceil(max / power) * power;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t\t}\n\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\t\t// logarithmic\n\t\telse {\n\t\t\tif (min <= 0) {\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t\tmin = this.get(\"baseValue\", 0);\n\t\t\t}\n\n\t\t\tif (min === Infinity) {\n\t\t\t\tmin = 1;\n\t\t\t}\n\n\t\t\tif (max === -Infinity) {\n\t\t\t\tmax = 10;\n\t\t\t}\n\n\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\n\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\n\n\t\t\tif (this.get(\"strictMinMax\")) {\n\t\t\t\tlet minDefined = this.get(\"min\");\n\t\t\t\tlet maxDefined = this.get(\"max\");\n\t\t\t\tif ($type.isNumber(minDefined) && minDefined > 0) {\n\t\t\t\t\tmin = minDefined;\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined) && maxDefined > 0) {\n\t\t\t\t\tmax = maxDefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\t\tif (!logarithmic) {\n\t\t\t// final min and max\n\t\t\tlet minCount = Math.floor(min / step);\n\n\t\t\tmin = $math.round(step * minCount, decCount);\n\n\t\t\tlet maxCount: number;\n\n\t\t\tif (!strictMode) {\n\t\t\t\tmaxCount = Math.ceil(max / step);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaxCount = Math.floor(max / step);\n\t\t\t}\n\n\t\t\tif (maxCount === minCount) {\n\t\t\t\tmaxCount++;\n\t\t\t}\n\n\t\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\t\tif (max < initialMax) {\n\t\t\t\tmax = max + step;\n\t\t\t}\n\n\t\t\tif (min > initialMin) {\n\t\t\t\tmin = min - step;\n\t\t\t}\n\t\t}\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\t}\n\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis.setPrivateRaw(\"baseInterval\", groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis.setPrivateRaw(\"baseInterval\", baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\")) {\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series.dataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = series.dataItems as any;\n\n\t\t\t$array.eachContinue(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (series._dataSets[dataSetId].length < this.get(\"groupCount\", Infinity)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tconst groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\t\t\tif (groupIntervals) {\n\t\t\t\t\t\tgroupInterval = $time.chooseInterval(0, modifiedDifference, this.get(\"groupCount\", Infinity), groupIntervals);\n\t\t\t\t\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\t\t\t\t\tgroupInterval = { ...baseInterval };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count))) {\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis.setPrivateRaw(\"baseInterval\", groupInterval!);\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (start.index > 0) {\n\t\t\t\t\t\tstart.index -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tseries.setPrivate(\"startIndex\", start.index);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", end.index);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min)).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", value + intervalDuration);\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(date, new Date(previousValue), nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tdataItem.open = {};\n\t\tdataItem.close = {};\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\t\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\tlet endValue = value;\n\t\tif (location > 0) {\n\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t}\n\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\n\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position)), this.get(\"tooltipDateFormat\", format));\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\treturn $order.compare(dataItem.get(fieldName), value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\tdurationFormat: string;\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\tlet initialMin: number = min;\n\t\t\tlet initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\t\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tif (this.isDirty(\"opposite\")) {\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (chart) {\n\t\t\t\tconst axisChildren = axis.children;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tchildren.removeValue(axis);\n\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\taxisChildren.removeValue(this);\n\t\t\t\t\taxisChildren.push(this);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchart.bottomAxesContainer.children.moveValue(axis);\n\t\t\t\t\taxisChildren.removeValue(this);\n\t\t\t\t\taxisChildren.insertIndex(0, this);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\taxis.set(\"layout\", this._root.verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: this._root.verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tx0 = Math.max(0, x0);\n\t\t\tx1 = Math.min(w, x1);\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tif (this.isDirty(\"opposite\")) {\n\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tchildren.removeValue(axis);\n\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\taxisChildren.removeValue(this);\n\t\t\t\t\taxisChildren.insertIndex(0, this);\n\t\t\t\t\tthis.addTag(\"opposite\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchart.leftAxesContainer.children.moveValue(axis);\n\t\t\t\t\taxisChildren.removeValue(this);\n\t\t\t\t\taxisChildren.push(this);\n\t\t\t\t\tthis.removeTag(\"opposite\");\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\taxis.set(\"layout\", this._root.horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", this._root.horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ty0 = Math.max(0, y0);\n\t\t\ty1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\tlowX0?: number;\n\tlowY0?: number;\n\tlowX1?: number;\n\tlowY1?: number;\n\n\thighX0?: number;\n\thighY0?: number;\n\thighX1?: number;\n\thighY1?: number;\n\n\torientation?: \"horizontal\" | \"vertical\"\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\tcolumns: ListTemplate<Candlestick>\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\tprotected _afterNew() {\n\t\tthis.valueFields.push(\"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\t\tthis.valueXFields.push(\"lowValueX\", \"highValueX\");\n\t\tthis.valueYFields.push(\"lowValueY\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\tcolumns: ListTemplate<OHLC>\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;"],"sourceRoot":""}